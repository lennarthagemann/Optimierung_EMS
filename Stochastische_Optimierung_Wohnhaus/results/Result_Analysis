import json 
import os
from itertools import groupby
import re
import pickle 
"""
-------------------------------------
Lade die Lösung im JSON-Format in Numpy Arrays, um diese nachher vernünftig zu visualisieren.
Problem: Zeitstufen der Variablen wurden als eigenständige variablen abgespeichert.
    1. Zip Lösungen und Variablen zusammen in Tupel
    2. Gruppiere Tupel anhand Variablen mit regulärem Ausdruck
    3. Speichere Lösungen in Array, speichere anhand des Namens der regex
    4. Speichere einzelne Arrays mittels der Namen in results/Zeitraum/Arrays
-------------------------------------
"""
day = "2000-01-01"
save_dest = 'C:/Users/hagem/Optimierung_EMS/Stochastische_Optimierung_Wohnhaus/results/arrays/' + day
if not os.path.exists(save_dest):
    os.makedirs(save_dest)

patterns_1s = ['bat\[\w\d+\]', 'p_Nutz\[\w\d+\]', 'p_bat_Lade\[\w\d+\]', 'p_bat_Nutz\[\w\d+\]', 'p_einsp\[\w\d+\]', 'z1\[\w\d+\]']
patterns_2s = ['p_kauf\[\w\d+\]']
expr = '\[\w\d+\]'
with open('results/ef_solution.json', 'r') as f:
    results = json.load(f)
    args = [j  for j in results["node solutions"]["RootNode"]["variables"]]
    vals = [results["node solutions"]["RootNode"]["variables"][j]["solution"] for j in results["node solutions"]["RootNode"]["variables"]]
    solution_set = dict(zip(args, vals))
    for pat in patterns_1s:
        temp = []
        for sol in solution_set.items():
            matches = re.finditer(pat, sol[0])
            for match in matches:
                temp.append(solution_set[match.group(0)])
        print(temp)
        with open(save_dest + "/" + pat.rstrip(expr), 'wb') as s:
            pickle.dump(temp, s) 
         